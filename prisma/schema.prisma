
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
  clients       Client[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Client {
  id              String    @id @default(cuid())
  name            String
  domain          String    @unique
  embedScript     String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  planId          String
  plan            Plan      @relation(fields: [planId], references: [id])
  histories       History[]
  adminId         String
  admin           User      @relation(fields: [adminId], references: [id])
}

model Plan {
  id          String   @id @default(cuid())
  name        String   @unique // BÃ¡sico, Profissional, Enterprise
  clientLimit Int
  docLimit    Int
  price       Float
  clients     Client[]
}

model History {
  id              String   @id @default(cuid())
  quotationId     String   @unique
  clientId        String
  client          Client   @relation(fields: [clientId], references: [id])
  date            DateTime @default(now())
  amount          String
  status          String   // Aceita, Pendente, Rascunho, Recusada
  extractedData   String
  generatedQuote  String
  createdAt       DateTime @default(now())
}
